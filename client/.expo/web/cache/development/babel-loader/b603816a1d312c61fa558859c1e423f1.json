{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { registerRootComponent } from 'expo';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from 'react-redux';\nimport Login from \"./src/components/Login\";\nimport Register from \"./src/components/Register\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar session = useSelector(function (state) {\n  return state.session;\n});\n\nvar App = function App() {\n  return session(_jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Sign In\",\n        component: Login\n      }), _jsx(Stack.Screen, {\n        name: \"Sign Up\",\n        component: Register\n      })]\n    })\n  }));\n};\n\nregisterRootComponent(App);\nexport default App;","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","registerRootComponent","StatusBar","useSelector","Login","Register","Stack","session","state","App","headerShown"],"sources":["/home/zero/GIT/MASTERCAMP_DATA/client/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { registerRootComponent } from 'expo';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport Login from './src/components/Login';\nimport Register from './src/components/Register';\n\nconst Stack = createNativeStackNavigator();\nconst session = useSelector( state => state.session )\n\nconst App = () => {\n  return (session) \n    (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false}}>\n        <Stack.Screen name=\"Sign In\" component={Login} />\n        <Stack.Screen name=\"Sign Up\" component={Register} />\n      </Stack.Navigator>\n    </NavigationContainer>  \n  );\n}\n\nregisterRootComponent(App);\nexport default App;\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,qBAAT,QAAsC,MAAtC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;;;AAEA,IAAMC,KAAK,GAAGN,0BAA0B,EAAxC;AACA,IAAMO,OAAO,GAAGJ,WAAW,CAAE,UAAAK,KAAK;EAAA,OAAIA,KAAK,CAACD,OAAV;AAAA,CAAP,CAA3B;;AAEA,IAAME,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,OAAQF,OAAD,CAEL,KAAC,mBAAD;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAiB,aAAa,EAAE;QAAEG,WAAW,EAAE;MAAf,CAAhC;MAAA,WACE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,SAAnB;QAA6B,SAAS,EAAEN;MAAxC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,SAAnB;QAA6B,SAAS,EAAEC;MAAxC,EAFF;IAAA;EADF,EAFK,CAAP;AASD,CAVD;;AAYAJ,qBAAqB,CAACQ,GAAD,CAArB;AACA,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
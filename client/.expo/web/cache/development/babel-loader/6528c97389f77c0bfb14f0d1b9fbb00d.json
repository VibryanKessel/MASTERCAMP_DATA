{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { registerRootComponent } from 'expo';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Provider, useSelector } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Login from \"./src/components/Login\";\nimport Register from \"./src/components/Register\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nvar App = function App() {\n  var session = useSelector(function (state) {\n    return state.session;\n  });\n  return _jsxs(Provider, {\n    store: store,\n    children: [_jsx(StatusBar, {\n      animated: true\n    }), _jsx(NavigationContainer, {\n      children: session ? _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Sign In\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"Sign Up\",\n          component: Register\n        })]\n      }) : _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Tab.Screen, {\n          name: \"Settings\",\n          component: SettingsScreen\n        })]\n      })\n    })]\n  });\n};\n\nregisterRootComponent(App);\nexport default App;","map":{"version":3,"names":["createBottomTabNavigator","NavigationContainer","createNativeStackNavigator","registerRootComponent","StatusBar","Provider","useSelector","PersistGate","Login","Register","HomeScreen","SettingsScreen","Tab","Stack","App","session","state","store","headerShown"],"sources":["/home/zero/GIT/MASTERCAMP_DATA/client/App.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { registerRootComponent } from 'expo';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Provider, useSelector } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Login from './src/components/Login';\nimport Register from './src/components/Register';\nimport HomeScreen from './src/screens/HomeScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  const session = useSelector( state => state.session )\n  \n  return (\n    <Provider store={store}>\n        {/* <PersistGate loading={null} persistor={persistor}>  */}\n          <StatusBar animated={true} />\n        \n          <NavigationContainer>\n            {  \n                (session)? \n                (\n                  <Stack.Navigator screenOptions={{ headerShown: false}}>\n                    <Stack.Screen name=\"Sign In\" component={Login} />\n                    <Stack.Screen name=\"Sign Up\" component={Register} />\n                  </Stack.Navigator>\n                ):\n                (\n                  <Tab.Navigator>\n                    <Tab.Screen name=\"Home\" component={HomeScreen} />\n                    <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n                  </Tab.Navigator>\n                )\n            }  \n          </NavigationContainer>  \n      {/* </PersistGate> */}\n    </Provider>\n  )\n}\nregisterRootComponent(App);\nexport default App;\n    "],"mappings":"AAAA,SAASA,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,qBAAT,QAAsC,MAAtC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;;;AAEA,IAAMC,GAAG,GAAGZ,wBAAwB,EAApC;AACA,IAAMa,KAAK,GAAGX,0BAA0B,EAAxC;;AAEA,IAAMY,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,IAAMC,OAAO,GAAGT,WAAW,CAAE,UAAAU,KAAK;IAAA,OAAIA,KAAK,CAACD,OAAV;EAAA,CAAP,CAA3B;EAEA,OACE,MAAC,QAAD;IAAU,KAAK,EAAEE,KAAjB;IAAA,WAEM,KAAC,SAAD;MAAW,QAAQ,EAAE;IAArB,EAFN,EAIM,KAAC,mBAAD;MAAA,UAEOF,OAAD,GAEE,MAAC,KAAD,CAAO,SAAP;QAAiB,aAAa,EAAE;UAAEG,WAAW,EAAE;QAAf,CAAhC;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,SAAnB;UAA6B,SAAS,EAAEV;QAAxC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,SAAnB;UAA6B,SAAS,EAAEC;QAAxC,EAFF;MAAA,EAFF,GAQE,MAAC,GAAD,CAAK,SAAL;QAAA,WACE,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,MAAjB;UAAwB,SAAS,EAAEC;QAAnC,EADF,EAEE,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,UAAjB;UAA4B,SAAS,EAAEC;QAAvC,EAFF;MAAA;IAVR,EAJN;EAAA,EADF;AAyBD,CA5BD;;AA6BAR,qBAAqB,CAACW,GAAD,CAArB;AACA,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
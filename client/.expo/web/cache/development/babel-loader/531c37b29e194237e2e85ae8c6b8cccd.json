{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useCalendar } from \"../DatePicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Days = function Days() {\n  var _useCalendar = useCalendar(),\n      options = _useCalendar.options,\n      state = _useCalendar.state,\n      utils = _useCalendar.utils,\n      onDateChange = _useCalendar.onDateChange;\n\n  var _state = _slicedToArray(state, 2),\n      mainState = _state[0],\n      setMainState = _state[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemSize = _useState2[0],\n      setItemSize = _useState2[1];\n\n  var style = styles(options);\n  var days = useMemo(function () {\n    return utils.getMonthDays(mainState.activeDate);\n  });\n\n  var onSelectDay = function onSelectDay(date) {\n    setMainState({\n      type: 'set',\n      selectedDate: date\n    });\n    onDateChange(utils.getFormated(utils.getDate(date), 'dateFormat'));\n  };\n\n  var changeItemHeight = function changeItemHeight(_ref) {\n    var nativeEvent = _ref.nativeEvent;\n    var width = nativeEvent.layout.width;\n    !itemSize && setItemSize((width / 7).toFixed(2) * 1 - 0.5);\n  };\n\n  return _jsx(View, {\n    style: [style.container, utils.flexDirection],\n    onLayout: changeItemHeight,\n    children: days.map(function (day, n) {\n      return _jsx(View, {\n        style: {\n          width: itemSize,\n          height: itemSize\n        },\n        children: day && _jsx(TouchableOpacity, {\n          style: [style.dayItem, {\n            borderRadius: itemSize / 2\n          }, mainState.selectedDate === day.date && style.dayItemSelected],\n          onPress: function onPress() {\n            return !day.disabled && onSelectDay(day.date);\n          },\n          activeOpacity: 0.8,\n          children: _jsx(Text, {\n            style: [style.dayText, mainState.selectedDate === day.date && style.dayTextSelected, day.disabled && style.dayTextDisabled],\n            children: day.dayString\n          })\n        })\n      }, n);\n    })\n  });\n};\n\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      width: '100%',\n      height: '100%',\n      flexWrap: 'wrap'\n    },\n    dayItem: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 3\n    },\n    dayItemSelected: {\n      backgroundColor: theme.mainColor\n    },\n    dayText: {\n      fontFamily: theme.defaultFont,\n      fontSize: theme.textFontSize,\n      color: theme.textDefaultColor,\n      textAlign: 'center',\n      width: '100%'\n    },\n    dayTextSelected: {\n      color: theme.selectedTextColor,\n      fontFamily: theme.headerFont\n    },\n    dayTextDisabled: {\n      opacity: 0.2\n    }\n  });\n};\n\nexport { Days };","map":{"version":3,"names":["React","useState","useMemo","useCalendar","Days","options","state","utils","onDateChange","mainState","setMainState","itemSize","setItemSize","style","styles","days","getMonthDays","activeDate","onSelectDay","date","type","selectedDate","getFormated","getDate","changeItemHeight","nativeEvent","width","layout","toFixed","container","flexDirection","map","day","n","height","dayItem","borderRadius","dayItemSelected","disabled","dayText","dayTextSelected","dayTextDisabled","dayString","theme","StyleSheet","create","flexWrap","flex","justifyContent","alignItems","margin","backgroundColor","mainColor","fontFamily","defaultFont","fontSize","textFontSize","color","textDefaultColor","textAlign","selectedTextColor","headerFont","opacity"],"sources":["/home/zero/GIT/MASTERCAMP_DATA/client/node_modules/react-native-modern-datepicker/src/datePicker/components/Days.js"],"sourcesContent":["import React, {useState, useMemo} from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity} from 'react-native';\n\nimport {useCalendar} from '../DatePicker';\n\nconst Days = () => {\n  const {options, state, utils, onDateChange} = useCalendar();\n  const [mainState, setMainState] = state;\n  const [itemSize, setItemSize] = useState(0);\n  const style = styles(options);\n  const days = useMemo(() => utils.getMonthDays(mainState.activeDate));\n\n  const onSelectDay = date => {\n    setMainState({\n      type: 'set',\n      selectedDate: date,\n    });\n    onDateChange(utils.getFormated(utils.getDate(date), 'dateFormat'));\n  };\n\n  const changeItemHeight = ({nativeEvent}) => {\n    const {width} = nativeEvent.layout;\n    !itemSize && setItemSize((width / 7).toFixed(2) * 1 - 0.5);\n  };\n\n  return (\n    <View style={[style.container, utils.flexDirection]} onLayout={changeItemHeight}>\n      {days.map((day, n) => (\n        <View\n          key={n}\n          style={{\n            width: itemSize,\n            height: itemSize,\n          }}>\n          {day && (\n            <TouchableOpacity\n              style={[\n                style.dayItem,\n                {\n                  borderRadius: itemSize / 2,\n                },\n                mainState.selectedDate === day.date && style.dayItemSelected,\n              ]}\n              onPress={() => !day.disabled && onSelectDay(day.date)}\n              activeOpacity={0.8}>\n              <Text\n                style={[\n                  style.dayText,\n                  mainState.selectedDate === day.date && style.dayTextSelected,\n                  day.disabled && style.dayTextDisabled,\n                ]}>\n                {day.dayString}\n              </Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = theme =>\n  StyleSheet.create({\n    container: {\n      width: '100%',\n      height: '100%',\n      flexWrap: 'wrap',\n    },\n    dayItem: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 3,\n    },\n    dayItemSelected: {\n      backgroundColor: theme.mainColor,\n    },\n    dayText: {\n      fontFamily: theme.defaultFont,\n      fontSize: theme.textFontSize,\n      color: theme.textDefaultColor,\n      textAlign: 'center',\n      width: '100%',\n    },\n    dayTextSelected: {\n      color: theme.selectedTextColor,\n      fontFamily: theme.headerFont,\n    },\n    dayTextDisabled: {\n      opacity: 0.2,\n    },\n  });\n\nexport {Days};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
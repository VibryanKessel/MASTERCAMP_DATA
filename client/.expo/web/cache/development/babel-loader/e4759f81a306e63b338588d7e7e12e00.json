{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { registerRootComponent } from 'expo';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Provider, useSelector } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Login from \"./src/components/Login\";\nimport Register from \"./src/components/Register\";\nimport { persistor, store } from \"./src/reducers\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nvar App = function App() {\n  var session = null;\n  console.log(useSelector(function (state) {\n    return state;\n  }));\n  return _jsx(Provider, {\n    store: store,\n    children: _jsxs(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: [_jsx(StatusBar, {\n        animated: true\n      }), _jsx(NavigationContainer, {\n        children: !session ? _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Sign In\",\n            component: Login\n          }), _jsx(Stack.Screen, {\n            name: \"Sign Up\",\n            component: Register\n          })]\n        }) : _jsxs(Tab.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Home\",\n            component: HomeScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen\n          })]\n        })\n      })]\n    })\n  });\n};\n\nregisterRootComponent(App);\nexport default App;","map":{"version":3,"names":["createBottomTabNavigator","NavigationContainer","createNativeStackNavigator","registerRootComponent","Provider","useSelector","PersistGate","Login","Register","persistor","store","HomeScreen","SettingsScreen","Tab","Stack","App","session","console","log","state","headerShown"],"sources":["/home/zero/GIT/MASTERCAMP_DATA/client/App.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { registerRootComponent } from 'expo';\nimport { StatusBar, Text, View } from 'react-native';\nimport { Provider, useSelector } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Login from './src/components/Login';\nimport Register from './src/components/Register';\nimport { persistor, store } from './src/reducers';\nimport HomeScreen from './src/screens/HomeScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  // const session = useSelector( state => state.session )\n  const session = null\n  console.log(useSelector( state => state ))\n  return (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}> \n          <StatusBar animated={true} />\n        \n          <NavigationContainer>\n            {  \n                (!session)? \n                (\n                  <Stack.Navigator screenOptions={{ headerShown: false}}>\n                    <Stack.Screen name=\"Sign In\" component={Login} />\n                    <Stack.Screen name=\"Sign Up\" component={Register} />\n                  </Stack.Navigator>\n                ):\n                (\n                  <Tab.Navigator screenOptions={{ headerShown: false}}>\n                    <Tab.Screen name=\"Home\" component={HomeScreen} />\n                    <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n                  </Tab.Navigator>\n                )\n            }  \n          </NavigationContainer>  \n      </PersistGate>\n    </Provider>\n  )\n}\nregisterRootComponent(App);\nexport default App;\n    "],"mappings":"AAAA,SAASA,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,qBAAT,QAAsC,MAAtC;;;;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,SAASC,SAAT,EAAoBC,KAApB;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;;;AAEA,IAAMC,GAAG,GAAGb,wBAAwB,EAApC;AACA,IAAMc,KAAK,GAAGZ,0BAA0B,EAAxC;;AAEA,IAAMa,GAAG,GAAG,SAANA,GAAM,GAAM;EAEhB,IAAMC,OAAO,GAAG,IAAhB;EACAC,OAAO,CAACC,GAAR,CAAYb,WAAW,CAAE,UAAAc,KAAK;IAAA,OAAIA,KAAJ;EAAA,CAAP,CAAvB;EACA,OACE,KAAC,QAAD;IAAU,KAAK,EAAET,KAAjB;IAAA,UACI,MAAC,WAAD;MAAa,OAAO,EAAE,IAAtB;MAA4B,SAAS,EAAED,SAAvC;MAAA,WACE,KAAC,SAAD;QAAW,QAAQ,EAAE;MAArB,EADF,EAGE,KAAC,mBAAD;QAAA,UAEO,CAACO,OAAF,GAEE,MAAC,KAAD,CAAO,SAAP;UAAiB,aAAa,EAAE;YAAEI,WAAW,EAAE;UAAf,CAAhC;UAAA,WACE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAC,SAAnB;YAA6B,SAAS,EAAEb;UAAxC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAC,SAAnB;YAA6B,SAAS,EAAEC;UAAxC,EAFF;QAAA,EAFF,GAQE,MAAC,GAAD,CAAK,SAAL;UAAe,aAAa,EAAE;YAAEY,WAAW,EAAE;UAAf,CAA9B;UAAA,WACE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,MAAjB;YAAwB,SAAS,EAAET;UAAnC,EADF,EAEE,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,UAAjB;YAA4B,SAAS,EAAEC;UAAvC,EAFF;QAAA;MAVR,EAHF;IAAA;EADJ,EADF;AAyBD,CA7BD;;AA8BAT,qBAAqB,CAACY,GAAD,CAArB;AACA,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}